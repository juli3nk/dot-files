#!/usr/bin/env bash

# Set default profile to '*' if not provided
profile=${1:-*}

# Path to the final merged kubeconfig file
kube_config="${HOME}/.kube/config"

# Initialize kubeconfigs array
kubeconfigs=()

# Check if the context directory exists
context_dir="${HOME}/.kube/contexts"
if [ ! -d "$context_dir" ]; then
  echo "Error: Context directory '${context_dir}' does not exist."
  exit 1
fi

# Find kubeconfig files matching the profile pattern
for kc in $(find "$context_dir" -maxdepth 1 -name "${profile}.y*ml"); do
  kubeconfigs+=("$kc")
done

# If no matching kubeconfig files were found, exit with a message
if [ ${#kubeconfigs[@]} -eq 0 ]; then
  echo -e "No kubeconfig files found for profile '$profile'."
  echo -e "Creating an empty kube config."

  cat << EOF > "$kube_config"
apiVersion: v1
kind: Config
clusters: []
contexts: []
current-context: ""
users: []
preferences: {}
EOF

  exit 0
fi

# Merge all the found kubeconfig files into the final one
KUBECONFIG=$(echo "${kubeconfigs[@]}" | tr ' ' ':') kubectl config view --merge --flatten > "$kube_config"

# Set the correct permissions for the merged kubeconfig
chmod 600 "$kube_config"

echo "Kubeconfig successfully merged and saved to '${kube_config}'"
